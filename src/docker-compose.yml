services:
  postgres:
    image: postgres:16-alpine
    container_name: postgres
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=dapr
      - POSTGRES_PASSWORD=dapr
      - POSTGRES_DB=dapr_state
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dapr"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - streaming-network
    volumes:
      - postgres-data:/var/lib/postgresql/data

  nats:
    image: nats:latest
    container_name: out-svc-nats
    ports:
      - 4222:4222   # Client port
      - 8222:8222   # HTTP management port
    command: ["-js", "-m", "8222"]
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8222/healthz"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - streaming-network

  out-svc:
    build:
      context: ./out-svc
      dockerfile: Dockerfile
    container_name: out-svc
    ports:
      - 3000:3000
      - 3500:3500   # Dapr HTTP port
      - 50001:50001 # Dapr gRPC port
    environment:
      - PORT=3000
      - HOST=0.0.0.0
      - DAPR_HOST=localhost
      - DAPR_HTTP_PORT=3500
      - PUBSUB_NAME=out-pubsub
      - TOPIC_NAME=out-subj
      - NATS_URL=nats://out-svc-nats:4222
    depends_on:
      nats:
        condition: service_healthy
    networks:
      - streaming-network

  dapr-placement:
    image: daprio/dapr:latest
    container_name: dapr-placement
    command: ["./placement", "-port", "50006"]
    ports:
      - 50006:50006
    networks:
      - streaming-network

  out-svc-dapr:
    image: daprio/daprd:latest
    container_name: out-svc-dapr
    command:
      [
        "./daprd",
        "-app-id", "out-svc",
        "-app-port", "3000",
        "-dapr-http-port", "3500",
        "-dapr-grpc-port", "50001",
        "-components-path", "/components",
        "-placement-host-address", "dapr-placement:50006"
      ]
    volumes:
      - ./dapr/components:/components
    depends_on:
      - out-svc
      - dapr-placement
      - nats
    network_mode: "service:out-svc"

  agent-svc:
    build:
      context: ./agent-svc
      dockerfile: Dockerfile
    container_name: agent-svc
    ports:
      - 3001:3001
      - 3501:3501   # Dapr HTTP port
      - 50002:50002 # Dapr gRPC port
    environment:
      - PORT=3001
      - HOST=0.0.0.0
      - DAPR_HOST=localhost
      - DAPR_HTTP_PORT=3501
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - streaming-network

  agent-svc-dapr:
    image: daprio/daprd:latest
    container_name: agent-svc-dapr
    command:
      [
        "./daprd",
        "-app-id", "agent-svc",
        "-app-port", "3001",
        "-dapr-http-port", "3501",
        "-dapr-grpc-port", "50002",
        "-components-path", "/components",
        "-placement-host-address", "dapr-placement:50006"
      ]
    volumes:
      - ./dapr/components:/components
    depends_on:
      - agent-svc
      - dapr-placement
      - postgres
    network_mode: "service:agent-svc"

networks:
  streaming-network:
    driver: bridge

volumes:
  postgres-data: